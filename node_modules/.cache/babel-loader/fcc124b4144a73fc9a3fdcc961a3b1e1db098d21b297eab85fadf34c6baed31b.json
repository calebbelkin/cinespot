{"ast":null,"code":"var _jsxFileName = \"/Users/calebbelkin/crud-api-test/src/MainPage.js\",\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport './MainPage.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [currentSearch, setCurrentSearch] = useState('');\n  const [movieData, setMovieData] = useState([]);\n  const getData = async () => {\n    _s();\n    fetch('http://localhost:4321/').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json(); // Parses the body text as JSON\n    }).then(data => {\n      console.log(data); // Here is your JSON data\n    }).catch(error => {\n      console.error('There was a problem with your fetch operation:', error);\n    });\n\n    // event handler for the onsubmit event\n    // when the form is submitted handleclick shoudld be called\n    const handleClick = e => {\n      // method is called on e,  to prevent the form from performing its default submit action, which is to reload the page.\n      e.preventDefault();\n      console.log(currentSearch);\n      setCurrentSearch('');\n    };\n    useEffect(() => {\n      getData();\n    }, []);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"search\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"bar\",\n          onSubmit: handleClick,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"search\",\n            name: \"search\",\n            value: currentSearch,\n            placeholder: \"Seach Here\",\n            onChange: e => setCurrentSearch(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this);\n  };\n  _s(getData, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n}\n_s2(MainPage, \"DPkkL45y6NPSl3vG7jcMMXANd2w=\");\n_c = MainPage;\nexport default MainPage;\n\n// onChange defined an event handler for the input field, it is called eveytime somethin is typed in the input field \n// e (on change) is the event object\n// e (handle click) represents the event object for the on submit event \n//handler function: a function designed to respond to specific events or actions \n// \nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MainPage","_s2","_s","$RefreshSig$","currentSearch","setCurrentSearch","movieData","setMovieData","getData","fetch","then","response","ok","Error","json","data","console","log","catch","error","handleClick","e","preventDefault","children","className","onSubmit","type","id","name","value","placeholder","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/calebbelkin/crud-api-test/src/MainPage.js"],"sourcesContent":["import React from 'react';\nimport './MainPage.css'\nimport { useEffect, useState } from 'react';\n\n\nfunction MainPage() {\n    const [currentSearch, setCurrentSearch] = useState('');\n    const [movieData , setMovieData] = useState([])\n\n\n    const getData = async () => {\n        fetch('http://localhost:4321/')\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();  // Parses the body text as JSON\n        })\n        .then(data => {\n          console.log(data);  // Here is your JSON data\n        })\n        .catch(error => {\n          console.error('There was a problem with your fetch operation:', error);\n        });\n\n    // event handler for the onsubmit event\n    // when the form is submitted handleclick shoudld be called\n    const handleClick = (e) => {\n        // method is called on e,  to prevent the form from performing its default submit action, which is to reload the page.\n        e.preventDefault();\n        console.log(currentSearch)              \n        setCurrentSearch('')\n    }\n\n    useEffect(() => {\n        getData();\n    }, []);\n    \n\n    return (\n      <div > \n      <header className='search'>\n        <form className='bar' onSubmit={handleClick}> \n          <input type=\"text\" id=\"search\" name=\"search\" value={currentSearch} placeholder='Seach Here' onChange={(e) => setCurrentSearch(e.target.value)}\n            /><br />\n          <input type=\"submit\" value=\"Submit\" />\n        </form> \n        </header>\n      </div>\n    );\n  }\n}\nexport default MainPage;\n\n\n// onChange defined an event handler for the input field, it is called eveytime somethin is typed in the input field \n// e (on change) is the event object\n// e (handle click) represents the event object for the on submit event \n//handler function: a function designed to respond to specific events or actions \n// "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,SAASC,QAAQA,CAAA,EAAG;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAChB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACS,SAAS,EAAGC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAG/C,MAAMW,OAAO,GAAG,MAAAA,CAAA,KAAY;IAAAN,EAAA;IACxBO,KAAK,CAAC,wBAAwB,CAAC,CAC9BC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAE;IAC3B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACZC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC,CAAC,CAAE;IACtB,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACdH,OAAO,CAACG,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;IACxE,CAAC,CAAC;;IAEN;IACA;IACA,MAAMC,WAAW,GAAIC,CAAC,IAAK;MACvB;MACAA,CAAC,CAACC,cAAc,CAAC,CAAC;MAClBN,OAAO,CAACC,GAAG,CAACb,aAAa,CAAC;MAC1BC,gBAAgB,CAAC,EAAE,CAAC;IACxB,CAAC;IAEDT,SAAS,CAAC,MAAM;MACZY,OAAO,CAAC,CAAC;IACb,CAAC,EAAE,EAAE,CAAC;IAGN,oBACET,OAAA;MAAAwB,QAAA,eACAxB,OAAA;QAAQyB,SAAS,EAAC,QAAQ;QAAAD,QAAA,eACxBxB,OAAA;UAAMyB,SAAS,EAAC,KAAK;UAACC,QAAQ,EAAEL,WAAY;UAAAG,QAAA,gBAC1CxB,OAAA;YAAO2B,IAAI,EAAC,MAAM;YAACC,EAAE,EAAC,QAAQ;YAACC,IAAI,EAAC,QAAQ;YAACC,KAAK,EAAEzB,aAAc;YAAC0B,WAAW,EAAC,YAAY;YAACC,QAAQ,EAAGV,CAAC,IAAKhB,gBAAgB,CAACgB,CAAC,CAACW,MAAM,CAACH,KAAK;UAAE;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3I,CAAC,eAAArC,OAAA;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACVrC,OAAA;YAAO2B,IAAI,EAAC,QAAQ;YAACG,KAAK,EAAC;UAAQ;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV,CAAC;EAAAlC,EAAA,CAxCOM,OAAO;AAyCjB;AAACP,GAAA,CA9CQD,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AA+CjB,eAAeA,QAAQ;;AAGvB;AACA;AACA;AACA;AACA;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}