{"ast":null,"code":"var _jsxFileName = \"/Users/calebbelkin/cinespot/src/MovieComponent.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport './MovieComponent.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setColor, enableColorChange, disableColorChange, setLastClickedId } from './Redux/textSlice';\nimport MovieCard from './MovieCard';\nimport Star from './assets/star.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Movie({\n  id,\n  title,\n  image,\n  rating,\n  releaseDate,\n  overview\n}) {\n  _s();\n  const [isHovering, setIsHovering] = useState(false);\n  const [isClicked, setIsClicked] = useState(false);\n\n  // const { color, canChangeColor, lastClickedId} = useSelector((state) => state.textColor); // Destructure to access both state fields\n  // const dispatch = useDispatch();\n\n  const trueRating = Math.round(rating * 10) / 10;\n  const year = releaseDate.slice(0, 4);\n  // const def = defaultImage\n\n  // console.log('line 13', isClicked)\n\n  // const handleMouseEnter = (e) => {\n  //   setIsHovering(true)\n  // // }\n  // console.log('23',lastClickedId)\n\n  // style={{ color: lastClickedId === id ? 'white' : 'black' }} title redux color test \n\n  // const handleClick = () => {\n  //   if (canChangeColor) {\n  //     dispatch(setLastClickedId(id));\n  //     dispatch(disableColorChange());\n  //   }\n  //   else {\n  //     dispatch(setLastClickedId(1));\n  //     dispatch(setLastClickedId(id))\n  //     dispatch(enableColorChange())\n  //   }\n  // };\n\n  const handleMouseHover = e => {\n    setIsHovering(true);\n  };\n  const handleMouseLeave = () => {\n    setIsHovering(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"poster\",\n      src: `https://image.tmdb.org/t/p/w500${image}`,\n      height: \"500px\",\n      width: \"350px\",\n      alt: \"Italian Trulli\",\n      onError: err => console.log('img error', err.target),\n      onMouseEnter: handleMouseHover,\n      onMouseLeave: handleMouseLeave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"year-and-rating\",\n        children: [\" \", year, /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"rating\",\n          children: [trueRating, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 6\n    }, this), isHovering && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-card\",\n      children: /*#__PURE__*/_jsxDEV(MovieCard, {\n        id: id,\n        title: title,\n        image: image,\n        rating: rating,\n        releaseDate: releaseDate,\n        overview: overview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(Movie, \"Pr3HiWycnOtRs38tgJNgGiLJ+dw=\");\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","setColor","enableColorChange","disableColorChange","setLastClickedId","MovieCard","Star","jsxDEV","_jsxDEV","Movie","id","title","image","rating","releaseDate","overview","_s","isHovering","setIsHovering","isClicked","setIsClicked","trueRating","Math","round","year","slice","handleMouseHover","e","handleMouseLeave","className","children","src","height","width","alt","onError","err","console","log","target","onMouseEnter","onMouseLeave","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/calebbelkin/cinespot/src/MovieComponent.js"],"sourcesContent":["import React from 'react';\nimport { useState } from 'react';\nimport './MovieComponent.css'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setColor, enableColorChange, disableColorChange, setLastClickedId } from './Redux/textSlice';\nimport MovieCard from './MovieCard';\nimport Star from './assets/star.svg'\n\nfunction Movie ( { id, title, image, rating, releaseDate, overview} ) {\n  const [isHovering, setIsHovering] = useState(false)\n  const [isClicked, setIsClicked] = useState(false)\n  \n  // const { color, canChangeColor, lastClickedId} = useSelector((state) => state.textColor); // Destructure to access both state fields\n  // const dispatch = useDispatch();\n\n  const trueRating = Math.round(rating * 10) / 10\n  const year = releaseDate.slice(0, 4)\n  // const def = defaultImage\n\n  // console.log('line 13', isClicked)\n\n  // const handleMouseEnter = (e) => {\n  //   setIsHovering(true)\n  // // }\n  // console.log('23',lastClickedId)\n\n  // style={{ color: lastClickedId === id ? 'white' : 'black' }} title redux color test \n\n  // const handleClick = () => {\n  //   if (canChangeColor) {\n  //     dispatch(setLastClickedId(id));\n  //     dispatch(disableColorChange());\n  //   }\n  //   else {\n  //     dispatch(setLastClickedId(1));\n  //     dispatch(setLastClickedId(id))\n  //     dispatch(enableColorChange())\n  //   }\n  // };\n\n  const handleMouseHover = (e) => {\n    setIsHovering(true)\n  }\n\n  const handleMouseLeave = () => {\n    setIsHovering(false);\n  };\n\n  return (\n    <div className='movie-container'>\n      <img className='poster' src={`https://image.tmdb.org/t/p/w500${image}`} height='500px' width='350px' alt=\"Italian Trulli\" onError={(err) => console.log('img error', err.target)} onMouseEnter={handleMouseHover} onMouseLeave={handleMouseLeave}/>\n      {/* <div className='hover menu'>\n      </div> */}\n     <div>\n     <div className='year-and-rating'> {year}\n     <span className='rating'>{trueRating} </span>\n     <span></span>\n     {/* <button onClick={handleClick}>\n      Click Me\n     </button> */}\n      </div>\n      <div className='title' >\n      {title}</div>\n      </div> \n      {isHovering && <div className=\"movie-card\"><MovieCard id={id}\n          title={title}\n          image={image}\n          rating={rating}\n          releaseDate={releaseDate}\n          overview={overview}  /></div>}\n    </div> \n  );\n}\n\nexport default Movie;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}