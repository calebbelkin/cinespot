{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { act } from '@testing-library/react';\nconst initialState = {\n  color: 'black',\n  canChangeColor: true // Flag to control color changes\n};\nconst textColorSlice = createSlice({\n  name: 'textColor',\n  initialState,\n  reducers: {\n    setColor: (state, action) => {\n      // Only change color if canChangeColor is true\n      if (state.canChangeColor) {\n        state.color = action.payload;\n        state.canChangeColor = false; // Optionally reset the flag\n      }\n    },\n    enableColorChange: state => {\n      state.canChangeColor = true; // Action to re-enable color changing\n    },\n    disableColorChange: state => {\n      state.canChangeColor = false; // Action to disable color changing\n    },\n    lastClickedId: (state, action) => {\n      state.lastClickedId = action.payload;\n    }\n  }\n});\nexport const {\n  setColor,\n  enableColorChange,\n  disableColorChange\n} = textColorSlice.actions;\nexport default textColorSlice.reducer;","map":{"version":3,"names":["createSlice","act","initialState","color","canChangeColor","textColorSlice","name","reducers","setColor","state","action","payload","enableColorChange","disableColorChange","lastClickedId","actions","reducer"],"sources":["/Users/calebbelkin/cinespot/src/Redux/textSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { act } from '@testing-library/react';\n\nconst initialState = {\n  color: 'black',\n  canChangeColor: true  // Flag to control color changes\n};\n\nconst textColorSlice = createSlice({\n  name: 'textColor',\n  initialState,\n  reducers: {\n    setColor: (state, action) => {\n      // Only change color if canChangeColor is true\n      if (state.canChangeColor) {\n        state.color = action.payload;\n        state.canChangeColor = false;  // Optionally reset the flag\n      }\n    },\n    enableColorChange: (state) => {\n      state.canChangeColor = true;  // Action to re-enable color changing\n    },\n    disableColorChange: (state) => {\n      state.canChangeColor = false; // Action to disable color changing\n    },\n    lastClickedId:(state, action) => {\n        state.lastClickedId = action.payload\n    }\n  },\n});\n\nexport const { setColor, enableColorChange, disableColorChange } = textColorSlice.actions;\nexport default textColorSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,GAAG,QAAQ,wBAAwB;AAE5C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,OAAO;EACdC,cAAc,EAAE,IAAI,CAAE;AACxB,CAAC;AAED,MAAMC,cAAc,GAAGL,WAAW,CAAC;EACjCM,IAAI,EAAE,WAAW;EACjBJ,YAAY;EACZK,QAAQ,EAAE;IACRC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC3B;MACA,IAAID,KAAK,CAACL,cAAc,EAAE;QACxBK,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAO;QAC5BF,KAAK,CAACL,cAAc,GAAG,KAAK,CAAC,CAAE;MACjC;IACF,CAAC;IACDQ,iBAAiB,EAAGH,KAAK,IAAK;MAC5BA,KAAK,CAACL,cAAc,GAAG,IAAI,CAAC,CAAE;IAChC,CAAC;IACDS,kBAAkB,EAAGJ,KAAK,IAAK;MAC7BA,KAAK,CAACL,cAAc,GAAG,KAAK,CAAC,CAAC;IAChC,CAAC;IACDU,aAAa,EAACA,CAACL,KAAK,EAAEC,MAAM,KAAK;MAC7BD,KAAK,CAACK,aAAa,GAAGJ,MAAM,CAACC,OAAO;IACxC;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEH,QAAQ;EAAEI,iBAAiB;EAAEC;AAAmB,CAAC,GAAGR,cAAc,CAACU,OAAO;AACzF,eAAeV,cAAc,CAACW,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}