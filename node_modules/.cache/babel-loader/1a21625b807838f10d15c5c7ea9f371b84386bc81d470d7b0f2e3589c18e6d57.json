{"ast":null,"code":"var _jsxFileName = \"/Users/calebbelkin/crud-api-test/src/MainPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './MainPage.css';\nimport { useEffect, useState } from 'react';\nimport Movie from './MovieComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage() {\n  _s();\n  const [currentSearch, setCurrentSearch] = useState('');\n  const [movieData, setMovieData] = useState([]);\n  const postData = async () => {\n    const requestBody = currentSearch;\n    console.log('line 13 RB'.requestBody);\n    try {\n      const response = await fetch('http://localhost:4321/movielist', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(requestBody)\n      });\n      const data = await response.json();\n      console.log('line 21 data');\n      setMovieData(data);\n      console.log(movieData);\n    } catch (error) {\n      console.log('Error posting data:', error);\n    }\n  };\n  const getData = () => {\n    fetch('http://localhost:4321/movielist').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json(); // Parses the body text as JSON\n    }).then(data => {\n      // console.log(data)\n      setMovieData(data.results);\n\n      // console.log('moviedata[0]', movieData[0].results[0].title)\n    }).catch(error => {\n      console.error('There was a problem with your fetch operation:', error);\n    });\n  };\n  // event handler for the onsubmit event\n  // when the form is submitted handleclick shoudld be called\n  const handleClick = e => {\n    // method is called on e,  to prevent the form from performing its default submit action, which is to reload the page.\n    e.preventDefault();\n    console.log(currentSearch);\n    postData();\n    setCurrentSearch('');\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  const movieDetails = movieData.map(movie => /*#__PURE__*/_jsxDEV(Movie, {\n    id: movie.id,\n    title: movie.title,\n    releaseDate: movie.release_date,\n    image: movie.poster_path,\n    rating: movie.vote_average,\n    overview: movie.overview\n  }, movie.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"search\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"bar\",\n        onSubmit: handleClick,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"search\",\n          name: \"search\",\n          value: currentSearch,\n          placeholder: \"Seach Here\",\n          onChange: e => setCurrentSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movieDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n}\n_s(MainPage, \"noQl+zcBky9DHxgTzVU0+uwTjFM=\");\n_c = MainPage;\nexport default MainPage;\n\n// onChange defined an event handler for the input field, it is called eveytime somethin is typed in the input field \n// e (on change) is the event object\n// e (handle click) represents the event object for the on submit event \n//handler function: a function designed to respond to specific events or actions \n// \nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useEffect","useState","Movie","jsxDEV","_jsxDEV","MainPage","_s","currentSearch","setCurrentSearch","movieData","setMovieData","postData","requestBody","console","log","response","fetch","method","headers","body","JSON","stringify","data","json","error","getData","then","ok","Error","results","catch","handleClick","e","preventDefault","movieDetails","map","movie","id","title","releaseDate","release_date","image","poster_path","rating","vote_average","overview","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onSubmit","type","name","value","placeholder","onChange","target","_c","$RefreshReg$"],"sources":["/Users/calebbelkin/crud-api-test/src/MainPage.js"],"sourcesContent":["import React from 'react';\nimport './MainPage.css'\nimport { useEffect, useState } from 'react';\nimport Movie from './MovieComponent';\n\n\nfunction MainPage() {\n    const [currentSearch, setCurrentSearch] = useState('');\n    const [movieData , setMovieData] = useState([])\n\n    const postData = async () => {\n      const requestBody = currentSearch;\n      console.log('line 13 RB'. requestBody)\n      try {\n        const response = await fetch ('http://localhost:4321/movielist', {\n          method: 'POST', \n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(requestBody)\n        })\n        const data = await response.json();\n        console.log('line 21 data')\n        setMovieData(data)\n        console.log(movieData)\n      } catch (error) {\n        console.log('Error posting data:', error);\n      }\n    }\n\n    const getData = () => {\n        fetch('http://localhost:4321/movielist')\n        \n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();  // Parses the body text as JSON\n        })\n        .then(data => {\n          // console.log(data)\n          setMovieData(data.results)\n     \n          // console.log('moviedata[0]', movieData[0].results[0].title)\n        })\n        .catch(error => {\n          console.error('There was a problem with your fetch operation:', error);\n        });\n    }\n    // event handler for the onsubmit event\n    // when the form is submitted handleclick shoudld be called\n    const handleClick = (e) => {\n        // method is called on e,  to prevent the form from performing its default submit action, which is to reload the page.\n        e.preventDefault();\n        console.log(currentSearch)\n        postData();  \n        setCurrentSearch('')\n    }\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n  const movieDetails = movieData.map(movie => (\n    <Movie key={movie.id} id={movie.id} title={movie.title} releaseDate={movie.release_date} image={movie.poster_path} rating={movie.vote_average} overview={movie.overview} />\n  ));\n\n    return (\n      <div > \n      <header className='search'>\n        <form className='bar' onSubmit={handleClick}> \n          <input type=\"text\" id=\"search\" name=\"search\" value={currentSearch} placeholder='Seach Here' onChange={(e) => setCurrentSearch(e.target.value)}\n            /><br />\n          <input type=\"submit\" value=\"Submit\" />\n        </form> \n        </header>\n        <div>\n          {movieDetails}\n        </div>\n      </div>\n    );\n  }\n\nexport default MainPage;\n\n\n// onChange defined an event handler for the input field, it is called eveytime somethin is typed in the input field \n// e (on change) is the event object\n// e (handle click) represents the event object for the on submit event \n//handler function: a function designed to respond to specific events or actions \n// "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}