{"ast":null,"code":"var _jsxFileName = \"/Users/calebbelkin/crud-api-test/src/MainPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './MainPage.css';\nimport { useEffect, useState } from 'react';\nimport Movie from './MovieComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage() {\n  _s();\n  const result = [];\n  const [currentSearch, setCurrentSearch] = useState('');\n  const [movieData, setMovieData] = useState([]);\n  const getData = () => {\n    fetch('http://localhost:4321/movielist').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json(); // Parses the body text as JSON\n    }).then(data => {\n      console.log(data);\n      setMovieData(data.results);\n\n      // console.log('moviedata[0]', movieData[0].results[0].title)\n    }).catch(error => {\n      console.error('There was a problem with your fetch operation:', error);\n    });\n  };\n  // event handler for the onsubmit event\n  // when the form is submitted handleclick shoudld be called\n  const handleClick = e => {\n    // method is called on e,  to prevent the form from performing its default submit action, which is to reload the page.\n    e.preventDefault();\n    console.log(currentSearch);\n    setCurrentSearch('');\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  console.log('OG movie Data', movieData);\n  const movieDetails = movieData.map(movie => {\n    return {\n      id: movie.id,\n      title: movie.title,\n      releaseDate: movie.release_date,\n      overview: movie.overview\n    };\n  });\n  console.log(movieDetails);\n\n  // console.log(userDetails);\n\n  // const individualMovies = movieData.map((info) => (\n  //   <Movie title={info[0][0].results[0].title} />\n  // ));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"search\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"bar\",\n        onSubmit: handleClick,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"search\",\n          name: \"search\",\n          value: currentSearch,\n          placeholder: \"Seach Here\",\n          onChange: e => setCurrentSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n}\n_s(MainPage, \"noQl+zcBky9DHxgTzVU0+uwTjFM=\");\n_c = MainPage;\nexport default MainPage;\n\n// onChange defined an event handler for the input field, it is called eveytime somethin is typed in the input field \n// e (on change) is the event object\n// e (handle click) represents the event object for the on submit event \n//handler function: a function designed to respond to specific events or actions \n// \nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useEffect","useState","Movie","jsxDEV","_jsxDEV","MainPage","_s","result","currentSearch","setCurrentSearch","movieData","setMovieData","getData","fetch","then","response","ok","Error","json","data","console","log","results","catch","error","handleClick","e","preventDefault","movieDetails","map","movie","id","title","releaseDate","release_date","overview","children","className","onSubmit","type","name","value","placeholder","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/calebbelkin/crud-api-test/src/MainPage.js"],"sourcesContent":["import React from 'react';\nimport './MainPage.css'\nimport { useEffect, useState } from 'react';\nimport Movie from './MovieComponent';\n\n\nfunction MainPage() {\n    const result = [];\n    const [currentSearch, setCurrentSearch] = useState('');\n    const [movieData , setMovieData] = useState([])\n\n\n    const getData = () => {\n        fetch('http://localhost:4321/movielist')\n        \n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();  // Parses the body text as JSON\n        })\n        .then(data => {\n          console.log(data)\n          setMovieData(data.results)\n     \n          // console.log('moviedata[0]', movieData[0].results[0].title)\n        })\n        .catch(error => {\n          console.error('There was a problem with your fetch operation:', error);\n        });\n    }\n    // event handler for the onsubmit event\n    // when the form is submitted handleclick shoudld be called\n    const handleClick = (e) => {\n        // method is called on e,  to prevent the form from performing its default submit action, which is to reload the page.\n        e.preventDefault();\n        console.log(currentSearch)              \n        setCurrentSearch('')\n    }\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    console.log('OG movie Data', movieData)\n    \n    const movieDetails = movieData.map(movie => {\n      return {\n          id: movie.id,\n          title: movie.title,\n          releaseDate: movie.release_date,\n          overview: movie.overview\n      };\n  });\n  \n  console.log(movieDetails);\n    \n    // console.log(userDetails);\n   \n    // const individualMovies = movieData.map((info) => (\n    //   <Movie title={info[0][0].results[0].title} />\n    // ));\n\n\n\n    return (\n      <div > \n      <header className='search'>\n        <form className='bar' onSubmit={handleClick}> \n          <input type=\"text\" id=\"search\" name=\"search\" value={currentSearch} placeholder='Seach Here' onChange={(e) => setCurrentSearch(e.target.value)}\n            /><br />\n          <input type=\"submit\" value=\"Submit\" />\n        </form> \n        </header>\n      </div>\n    );\n  }\n\nexport default MainPage;\n\n\n// onChange defined an event handler for the input field, it is called eveytime somethin is typed in the input field \n// e (on change) is the event object\n// e (handle click) represents the event object for the on submit event \n//handler function: a function designed to respond to specific events or actions \n// "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAMC,MAAM,GAAG,EAAE;EACjB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACS,SAAS,EAAGC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAG/C,MAAMW,OAAO,GAAGA,CAAA,KAAM;IAClBC,KAAK,CAAC,iCAAiC,CAAC,CAEvCC,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAE;IAC3B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACZC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;MACjBR,YAAY,CAACQ,IAAI,CAACG,OAAO,CAAC;;MAE1B;IACF,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAI;MACdJ,OAAO,CAACI,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;IACxE,CAAC,CAAC;EACN,CAAC;EACD;EACA;EACA,MAAMC,WAAW,GAAIC,CAAC,IAAK;IACvB;IACAA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBP,OAAO,CAACC,GAAG,CAACb,aAAa,CAAC;IAC1BC,gBAAgB,CAAC,EAAE,CAAC;EACxB,CAAC;EAEDT,SAAS,CAAC,MAAM;IACZY,OAAO,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAENQ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEX,SAAS,CAAC;EAEvC,MAAMkB,YAAY,GAAGlB,SAAS,CAACmB,GAAG,CAACC,KAAK,IAAI;IAC1C,OAAO;MACHC,EAAE,EAAED,KAAK,CAACC,EAAE;MACZC,KAAK,EAAEF,KAAK,CAACE,KAAK;MAClBC,WAAW,EAAEH,KAAK,CAACI,YAAY;MAC/BC,QAAQ,EAAEL,KAAK,CAACK;IACpB,CAAC;EACL,CAAC,CAAC;EAEFf,OAAO,CAACC,GAAG,CAACO,YAAY,CAAC;;EAEvB;;EAEA;EACA;EACA;;EAIA,oBACExB,OAAA;IAAAgC,QAAA,eACAhC,OAAA;MAAQiC,SAAS,EAAC,QAAQ;MAAAD,QAAA,eACxBhC,OAAA;QAAMiC,SAAS,EAAC,KAAK;QAACC,QAAQ,EAAEb,WAAY;QAAAW,QAAA,gBAC1ChC,OAAA;UAAOmC,IAAI,EAAC,MAAM;UAACR,EAAE,EAAC,QAAQ;UAACS,IAAI,EAAC,QAAQ;UAACC,KAAK,EAAEjC,aAAc;UAACkC,WAAW,EAAC,YAAY;UAACC,QAAQ,EAAGjB,CAAC,IAAKjB,gBAAgB,CAACiB,CAAC,CAACkB,MAAM,CAACH,KAAK;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3I,CAAC,eAAA5C,OAAA;UAAAyC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACV5C,OAAA;UAAOmC,IAAI,EAAC,QAAQ;UAACE,KAAK,EAAC;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC1C,EAAA,CAtEMD,QAAQ;AAAA4C,EAAA,GAAR5C,QAAQ;AAwEjB,eAAeA,QAAQ;;AAGvB;AACA;AACA;AACA;AACA;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}