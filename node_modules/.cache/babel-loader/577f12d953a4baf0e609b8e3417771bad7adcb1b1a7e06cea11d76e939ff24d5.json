{"ast":null,"code":"var _jsxFileName = \"/Users/calebbelkin/crud-api-test/src/MainPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './MainPage.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage() {\n  _s();\n  const [currentSearch, setCurrentSearch] = useState('');\n\n  // event handler for the onsubmit event\n  // when the form is submitted handleclick shoudld be called\n  const handleClick = e => {\n    // method is called on e,  to prevent the form from performing its default submit action, which is to reload the page.\n    e.preventDefault();\n    console.log(currentSearch);\n    fetch('https://').then(response => response.json()).then(data => console.log(data)).catch(error => console.error(error));\n    const getData = async () => {\n      try {\n        const data = await fetch(\"/item\");\n        if (!data.ok) {\n          throw new Error(\"Failed to fetch data\");\n        }\n        const jsonData = await data.json();\n        setItemsArray(jsonData);\n        // console.log(\"Data fetched:\", jsonData);\n        // console.log(jsonData)\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    setCurrentSearch('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"search\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"bar\",\n        onSubmit: handleClick,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"search\",\n          name: \"search\",\n          value: currentSearch,\n          placeholder: \"Seach Here\",\n          onChange: e => setCurrentSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n}\n_s(MainPage, \"TjnurVRbh+ox2v5YKkYxtsO47O8=\");\n_c = MainPage;\nexport default MainPage;\n\n// onChange defined an event handler for the input field, it is called eveytime somethin is typed in the input field \n// e (on change) is the event object\n// e (handle click) represents the event object for the on submit event \n//handler function: a function designed to respond to specific events or actions \n// \nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","MainPage","_s","currentSearch","setCurrentSearch","handleClick","e","preventDefault","console","log","fetch","then","response","json","data","catch","error","getData","ok","Error","jsonData","setItemsArray","children","className","onSubmit","type","id","name","value","placeholder","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/calebbelkin/crud-api-test/src/MainPage.js"],"sourcesContent":["import React from 'react';\nimport './MainPage.css'\nimport { useEffect, useState } from 'react';\n\n\nfunction MainPage() {\n    const [currentSearch, setCurrentSearch] = useState('')\n\n    // event handler for the onsubmit event\n    // when the form is submitted handleclick shoudld be called\n    const handleClick = (e) => {\n        // method is called on e,  to prevent the form from performing its default submit action, which is to reload the page.\n        e.preventDefault();\n        console.log(currentSearch)\n\n        fetch('https://')\n            .then(response => response.json())\n            .then(data => console.log(data))\n            .catch(error => console.error(error));\n\n\n\n\n            const getData = async () => {\n                try {\n                  const data = await fetch(\"/item\");\n                  if (!data.ok) {\n                    throw new Error(\"Failed to fetch data\");\n                  }\n                  const jsonData = await data.json();\n                  setItemsArray(jsonData);\n                  // console.log(\"Data fetched:\", jsonData);\n                  // console.log(jsonData)\n                  \n                } catch (error) {\n                  console.error(\"Error fetching data:\", error);\n                }\n              }\n              \n\n\n        setCurrentSearch('')\n    }\n\n    \n\n    return (\n      <div > \n      <header className='search'>\n        <form className='bar' onSubmit={handleClick}> \n          {/* <label htmlFor=\"fname\">First name:</label><br /> */}\n          <input type=\"text\" id=\"search\" name=\"search\" value={currentSearch} placeholder='Seach Here' onChange={(e) => setCurrentSearch(e.target.value)}\n            /><br />\n          <input type=\"submit\" value=\"Submit\" />\n        </form> \n        </header>\n      </div>\n    );\n  }\n\nexport default MainPage;\n\n\n// onChange defined an event handler for the input field, it is called eveytime somethin is typed in the input field \n// e (on change) is the event object\n// e (handle click) represents the event object for the on submit event \n//handler function: a function designed to respond to specific events or actions \n// "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AACvB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACA;EACA,MAAMO,WAAW,GAAIC,CAAC,IAAK;IACvB;IACAA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAACN,aAAa,CAAC;IAE1BO,KAAK,CAAC,UAAU,CAAC,CACZC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIN,OAAO,CAACC,GAAG,CAACK,IAAI,CAAC,CAAC,CAC/BC,KAAK,CAACC,KAAK,IAAIR,OAAO,CAACQ,KAAK,CAACA,KAAK,CAAC,CAAC;IAKrC,MAAMC,OAAO,GAAG,MAAAA,CAAA,KAAY;MACxB,IAAI;QACF,MAAMH,IAAI,GAAG,MAAMJ,KAAK,CAAC,OAAO,CAAC;QACjC,IAAI,CAACI,IAAI,CAACI,EAAE,EAAE;UACZ,MAAM,IAAIC,KAAK,CAAC,sBAAsB,CAAC;QACzC;QACA,MAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACD,IAAI,CAAC,CAAC;QAClCQ,aAAa,CAACD,QAAQ,CAAC;QACvB;QACA;MAEF,CAAC,CAAC,OAAOJ,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAIPZ,gBAAgB,CAAC,EAAE,CAAC;EACxB,CAAC;EAID,oBACEJ,OAAA;IAAAsB,QAAA,eACAtB,OAAA;MAAQuB,SAAS,EAAC,QAAQ;MAAAD,QAAA,eACxBtB,OAAA;QAAMuB,SAAS,EAAC,KAAK;QAACC,QAAQ,EAAEnB,WAAY;QAAAiB,QAAA,gBAE1CtB,OAAA;UAAOyB,IAAI,EAAC,MAAM;UAACC,EAAE,EAAC,QAAQ;UAACC,IAAI,EAAC,QAAQ;UAACC,KAAK,EAAEzB,aAAc;UAAC0B,WAAW,EAAC,YAAY;UAACC,QAAQ,EAAGxB,CAAC,IAAKF,gBAAgB,CAACE,CAAC,CAACyB,MAAM,CAACH,KAAK;QAAE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3I,CAAC,eAAAnC,OAAA;UAAAgC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACVnC,OAAA;UAAOyB,IAAI,EAAC,QAAQ;UAACG,KAAK,EAAC;QAAQ;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACjC,EAAA,CArDMD,QAAQ;AAAAmC,EAAA,GAARnC,QAAQ;AAuDjB,eAAeA,QAAQ;;AAGvB;AACA;AACA;AACA;AACA;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}