{"ast":null,"code":"var _jsxFileName = \"/Users/calebbelkin/crud-api-test/src/MainPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './MainPage.css';\nimport { useEffect, useState } from 'react';\nimport Movie from './MovieComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage() {\n  _s();\n  const result = [];\n  const [currentSearch, setCurrentSearch] = useState('');\n  const [movieData, setMovieData] = useState([result]);\n  const getData = () => {\n    fetch('http://localhost:4321/movielist').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json(); // Parses the body text as JSON\n    }).then(data => {\n      result.push(data);\n      setMovieData(result);\n      console.log();\n      console.log('moviedata[0]', movieData[0].results[0].title);\n    }).catch(error => {\n      console.error('There was a problem with your fetch operation:', error);\n    });\n  };\n  // event handler for the onsubmit event\n  // when the form is submitted handleclick shoudld be called\n  const handleClick = e => {\n    // method is called on e,  to prevent the form from performing its default submit action, which is to reload the page.\n    e.preventDefault();\n    console.log(currentSearch);\n    setCurrentSearch('');\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  const individualMovies = movieData.map(info => /*#__PURE__*/_jsxDEV(Movie, {\n    title: info[0].results[0].title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"search\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"bar\",\n        onSubmit: handleClick,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"search\",\n          name: \"search\",\n          value: currentSearch,\n          placeholder: \"Seach Here\",\n          onChange: e => setCurrentSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this);\n}\n_s(MainPage, \"V/sxHB6BxUTQ0Lrw/JIll9+iGUE=\");\n_c = MainPage;\nexport default MainPage;\n\n// onChange defined an event handler for the input field, it is called eveytime somethin is typed in the input field \n// e (on change) is the event object\n// e (handle click) represents the event object for the on submit event \n//handler function: a function designed to respond to specific events or actions \n// \nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useEffect","useState","Movie","jsxDEV","_jsxDEV","MainPage","_s","result","currentSearch","setCurrentSearch","movieData","setMovieData","getData","fetch","then","response","ok","Error","json","data","push","console","log","results","title","catch","error","handleClick","e","preventDefault","individualMovies","map","info","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onSubmit","type","id","name","value","placeholder","onChange","target","_c","$RefreshReg$"],"sources":["/Users/calebbelkin/crud-api-test/src/MainPage.js"],"sourcesContent":["import React from 'react';\nimport './MainPage.css'\nimport { useEffect, useState } from 'react';\nimport Movie from './MovieComponent';\n\n\nfunction MainPage() {\n    const result = [];\n    const [currentSearch, setCurrentSearch] = useState('');\n    const [movieData , setMovieData] = useState([result])\n\n\n    const getData = () => {\n        fetch('http://localhost:4321/movielist')\n        \n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();  // Parses the body text as JSON\n        })\n        .then(data => {\n          result.push(data)\n          setMovieData(result)\n          console.log()\n          console.log('moviedata[0]', movieData[0].results[0].title)\n        })\n        .catch(error => {\n          console.error('There was a problem with your fetch operation:', error);\n        });\n    }\n    // event handler for the onsubmit event\n    // when the form is submitted handleclick shoudld be called\n    const handleClick = (e) => {\n        // method is called on e,  to prevent the form from performing its default submit action, which is to reload the page.\n        e.preventDefault();\n        console.log(currentSearch)              \n        setCurrentSearch('')\n    }\n\n    useEffect(() => {\n        getData();\n    }, []);\n    \n   \n    const individualMovies = movieData.map((info) => (\n      <Movie title={info[0].results[0].title} />\n    ));\n\n\n\n    return (\n      <div > \n      <header className='search'>\n        <form className='bar' onSubmit={handleClick}> \n          <input type=\"text\" id=\"search\" name=\"search\" value={currentSearch} placeholder='Seach Here' onChange={(e) => setCurrentSearch(e.target.value)}\n            /><br />\n          <input type=\"submit\" value=\"Submit\" />\n        </form> \n        </header>\n      </div>\n    );\n  }\n\nexport default MainPage;\n\n\n// onChange defined an event handler for the input field, it is called eveytime somethin is typed in the input field \n// e (on change) is the event object\n// e (handle click) represents the event object for the on submit event \n//handler function: a function designed to respond to specific events or actions \n// "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}