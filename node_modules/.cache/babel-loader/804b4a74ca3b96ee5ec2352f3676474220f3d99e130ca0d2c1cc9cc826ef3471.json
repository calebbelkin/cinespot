{"ast":null,"code":"var _jsxFileName = \"/Users/calebbelkin/crud-api-test/src/MainPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './MainPage.css';\nimport { useEffect, useState } from 'react';\nimport Movie from './MovieComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage() {\n  _s();\n  const result = [];\n  const [currentSearch, setCurrentSearch] = useState('');\n  const [movieData, setMovieData] = useState([]);\n  const getData = () => {\n    fetch('http://localhost:4321/movielist').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json(); // Parses the body text as JSON\n    }).then(data => {\n      // console.log(data)\n      setMovieData(data.results);\n\n      // console.log('moviedata[0]', movieData[0].results[0].title)\n    }).catch(error => {\n      console.error('There was a problem with your fetch operation:', error);\n    });\n  };\n  // event handler for the onsubmit event\n  // when the form is submitted handleclick shoudld be called\n  const handleClick = e => {\n    // method is called on e,  to prevent the form from performing its default submit action, which is to reload the page.\n    e.preventDefault();\n    console.log(currentSearch);\n    setCurrentSearch('');\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n\n  // console.log('OG movie Data', movieData)\n\n  //   const movieDetails = movieData.map(movie => {\n  //     return {\n  //         id: movie.id,\n  //         title: movie.title,\n  //         releaseDate: movie.release_date,\n  //         image: movie.poster_path,\n  //         rating: movie.vote_average,\n  //         overview: movie.overview\n  //     };\n  // });\n\n  const movieDetails = movieData.map(movie => {\n    return {\n      id: movie.id,\n      title: movie.title,\n      releaseDate: movie.release_date,\n      image: movie.poster_path,\n      rating: movie.vote_average,\n      overview: movie.overview\n    };\n  });\n  const newitems = itemsArray.map((item, index) => /*#__PURE__*/_jsxDEV(IndividualItem, {\n    item: item.listItem,\n    id: item._id,\n    itemsArray: itemsArray,\n    getData: getData\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 3\n  }, this));\n  console.log('should be array of objects', movieDetails);\n  console.log('type of', typeof movieDetails);\n\n  // console.log(userDetails);\n\n  // const individualMovies = movieData.map((info) => (\n  //   <Movie title={info[0][0].results[0].title} />\n  // ));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"search\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"bar\",\n        onSubmit: handleClick,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"search\",\n          name: \"search\",\n          value: currentSearch,\n          placeholder: \"Seach Here\",\n          onChange: e => setCurrentSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Movie, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 7\n  }, this);\n}\n_s(MainPage, \"noQl+zcBky9DHxgTzVU0+uwTjFM=\");\n_c = MainPage;\nexport default MainPage;\n\n// onChange defined an event handler for the input field, it is called eveytime somethin is typed in the input field \n// e (on change) is the event object\n// e (handle click) represents the event object for the on submit event \n//handler function: a function designed to respond to specific events or actions \n// \nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useEffect","useState","Movie","jsxDEV","_jsxDEV","MainPage","_s","result","currentSearch","setCurrentSearch","movieData","setMovieData","getData","fetch","then","response","ok","Error","json","data","results","catch","error","console","handleClick","e","preventDefault","log","movieDetails","map","movie","id","title","releaseDate","release_date","image","poster_path","rating","vote_average","overview","newitems","itemsArray","item","index","IndividualItem","listItem","_id","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onSubmit","type","name","value","placeholder","onChange","target","_c","$RefreshReg$"],"sources":["/Users/calebbelkin/crud-api-test/src/MainPage.js"],"sourcesContent":["import React from 'react';\nimport './MainPage.css'\nimport { useEffect, useState } from 'react';\nimport Movie from './MovieComponent';\n\n\nfunction MainPage() {\n    const result = [];\n    const [currentSearch, setCurrentSearch] = useState('');\n    const [movieData , setMovieData] = useState([])\n\n\n    const getData = () => {\n        fetch('http://localhost:4321/movielist')\n        \n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();  // Parses the body text as JSON\n        })\n        .then(data => {\n          // console.log(data)\n          setMovieData(data.results)\n     \n          // console.log('moviedata[0]', movieData[0].results[0].title)\n        })\n        .catch(error => {\n          console.error('There was a problem with your fetch operation:', error);\n        });\n    }\n    // event handler for the onsubmit event\n    // when the form is submitted handleclick shoudld be called\n    const handleClick = (e) => {\n        // method is called on e,  to prevent the form from performing its default submit action, which is to reload the page.\n        e.preventDefault();\n        console.log(currentSearch)              \n        setCurrentSearch('')\n    }\n\n    useEffect(() => {\n        getData();\n    }, []);\n\n    // console.log('OG movie Data', movieData)\n    \n  //   const movieDetails = movieData.map(movie => {\n  //     return {\n  //         id: movie.id,\n  //         title: movie.title,\n  //         releaseDate: movie.release_date,\n  //         image: movie.poster_path,\n  //         rating: movie.vote_average,\n  //         overview: movie.overview\n  //     };\n  // });\n\n\n\n  const movieDetails = movieData.map(movie => {\n    return {\n        id: movie.id,\n        title: movie.title,\n        releaseDate: movie.release_date,\n        image: movie.poster_path,\n        rating: movie.vote_average,\n        overview: movie.overview\n    };\n});\n\n\nconst newitems = itemsArray.map((item, index) => (\n  <IndividualItem key={index} item={item.listItem} id={item._id} itemsArray={itemsArray} getData={getData}/>\n));\n\n\n  \n  console.log('should be array of objects', movieDetails);\n  console.log('type of', typeof movieDetails)\n    \n    // console.log(userDetails);\n   \n    // const individualMovies = movieData.map((info) => (\n    //   <Movie title={info[0][0].results[0].title} />\n    // ));\n\n\n\n    return (\n      <div > \n      <header className='search'>\n        <form className='bar' onSubmit={handleClick}> \n          <input type=\"text\" id=\"search\" name=\"search\" value={currentSearch} placeholder='Seach Here' onChange={(e) => setCurrentSearch(e.target.value)}\n            /><br />\n          <input type=\"submit\" value=\"Submit\" />\n        </form> \n        </header>\n        <div>\n          <Movie />\n        </div>\n      </div>\n    );\n  }\n\nexport default MainPage;\n\n\n// onChange defined an event handler for the input field, it is called eveytime somethin is typed in the input field \n// e (on change) is the event object\n// e (handle click) represents the event object for the on submit event \n//handler function: a function designed to respond to specific events or actions \n// "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}