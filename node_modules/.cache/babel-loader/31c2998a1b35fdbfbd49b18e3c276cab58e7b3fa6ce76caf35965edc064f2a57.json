{"ast":null,"code":"var _jsxFileName = \"/Users/calebbelkin/Desktop/cinespot/src/components/MainPage.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../styling/MainPage.css';\nimport { useEffect, useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Movie from './MovieComponent';\nimport MovieGrid from '@/components/MovieGrid';\nimport Button from '@mui/material/Button';\nimport { useSelector } from 'react-redux';\nimport { setUsername } from '../Redux/userSlice';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainPage() {\n  _s();\n  const [currentSearch, setCurrentSearch] = useState('');\n  const [movieData, setMovieData] = useState([]);\n  const {\n    username\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const handleLoginNav = () => {\n    navigate('/login');\n  };\n  const logout = () => {\n    dispatch(setUsername(null));\n  };\n  const retriveSearch = async () => {\n    const QuereyParam = currentSearch;\n    try {\n      const response = await fetch(`https://api.themoviedb.org/3/search/movie?query=${QuereyParam}&language=en-US&api_key=530e59adb476a9d4d8f46f031c75093e`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n      const data = await response.json();\n      setMovieData(data.results);\n    } catch (error) {\n      console.log('Error posting data:', error);\n    }\n  };\n  const getData = () => {\n    fetch('http://localhost:4321/movielist').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json(); // Parses the body text as JSON\n    }).then(data => {\n      // console.log(data)\n      setMovieData(data.results);\n      // console.log('moviedata[0]', movieData[0].results[0].title)\n    }).catch(error => {\n      console.error('There was a problem with your fetch operation:', error);\n    });\n  };\n  // event handler for the onsubmit event\n  // when the form is submitted handleclick shoudld be called\n  const handleClick = e => {\n    // method is called on e,  to prevent the form from performing its default submit action, which is to reload the page.\n    e.preventDefault();\n    // console.log(currentSearch)\n    retriveSearch();\n    setCurrentSearch('');\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  const movieDetails = movieData.map(movie => {\n    if (movie.poster_path == null) {\n      return null;\n    }\n    return /*#__PURE__*/_jsxDEV(Movie, {\n      id: movie.id,\n      title: movie.title,\n      releaseDate: movie.release_date,\n      image: movie.poster_path,\n      rating: movie.vote_average,\n      overview: movie.overview\n    }, movie.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form\",\n        onSubmit: handleClick,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-bar\",\n          name: \"search\",\n          value: currentSearch,\n          placeholder: \"Seach Movies\",\n          onChange: e => setCurrentSearch(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"\",\n          placeholder: \"\",\n          className: \"submit-btn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: \"login\",\n        variant: \"outlined\",\n        onClick: handleLoginNav,\n        children: [\"   \", !username ? \"Login\" : 'Hi,' + ' ' + username, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), \";\", username ? /*#__PURE__*/_jsxDEV(Button, {\n        className: \"logout\",\n        variant: \"outlined\",\n        onClick: logout,\n        children: \" Logout \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 23\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"backdrop\",\n      children: /*#__PURE__*/_jsxDEV(MovieGrid, {\n        movieDetails: movieDetails\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 7\n  }, this);\n}\n_s(MainPage, \"p4adyienTlVp2lu1xd2PcPS6A9Y=\", false, function () {\n  return [useSelector, useDispatch, useNavigate];\n});\n_c = MainPage;\nexport default MainPage;\nvar _c;\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useNavigate","Movie","MovieGrid","Button","useSelector","setUsername","useDispatch","jsxDEV","_jsxDEV","MainPage","_s","currentSearch","setCurrentSearch","movieData","setMovieData","username","state","user","dispatch","navigate","handleLoginNav","logout","retriveSearch","QuereyParam","response","fetch","ok","Error","status","data","json","results","error","console","log","getData","then","catch","handleClick","e","preventDefault","movieDetails","map","movie","poster_path","id","title","releaseDate","release_date","image","rating","vote_average","overview","fileName","_jsxFileName","lineNumber","columnNumber","children","className","onSubmit","type","name","value","placeholder","onChange","target","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/calebbelkin/Desktop/cinespot/src/components/MainPage.js"],"sourcesContent":["import React from 'react';\nimport '../styling/MainPage.css'\nimport { useEffect, useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Movie from './MovieComponent';\nimport MovieGrid from '@/components/MovieGrid';\nimport Button from '@mui/material/Button';\nimport { useSelector } from 'react-redux';\nimport { setUsername } from '../Redux/userSlice';\nimport { useDispatch } from 'react-redux';\n\nfunction MainPage() {\n    const [currentSearch, setCurrentSearch] = useState('');\n    const [movieData , setMovieData] = useState([])\n\n      const { username } = useSelector((state) => state.user);\n      const dispatch = useDispatch();\n      const navigate = useNavigate();\n\n      const handleLoginNav = () => {\n        navigate('/login')\n      }\n      const logout = () => {\n        dispatch(setUsername(null))\n      }\n\n    const retriveSearch = async () => {\n      const QuereyParam = currentSearch;\n      try {\n        const response = await fetch(`https://api.themoviedb.org/3/search/movie?query=${QuereyParam}&language=en-US&api_key=530e59adb476a9d4d8f46f031c75093e`)\n\n      if (!response.ok) {\n      throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      setMovieData(data.results);\n    } catch (error) {\n      console.log('Error posting data:', error);\n      }\n      }\n\n      const getData = () => {\n          fetch('http://localhost:4321/movielist')\n          .then(response => {\n            if (!response.ok) {\n              throw new Error('Network response was not ok');\n            }\n            return response.json();  // Parses the body text as JSON\n          })\n          .then(data => {\n            // console.log(data)\n            setMovieData(data.results)\n            // console.log('moviedata[0]', movieData[0].results[0].title)\n          })\n          .catch(error => {\n            console.error('There was a problem with your fetch operation:', error);\n          });\n      }\n      // event handler for the onsubmit event\n      // when the form is submitted handleclick shoudld be called\n      const handleClick = (e) => {\n          // method is called on e,  to prevent the form from performing its default submit action, which is to reload the page.\n          e.preventDefault();\n          // console.log(currentSearch)\n          retriveSearch();  \n          setCurrentSearch('')\n      }\n\n      useEffect(() => {\n          getData();\n      }, []);\n\n  const movieDetails = movieData.map(movie => {\n    if (movie.poster_path == null) {return null \n    }\n    return (\n      <Movie key={movie.id} id={movie.id} title={movie.title} releaseDate={movie.release_date} image={movie.poster_path} rating={movie.vote_average} overview={movie.overview} />\n    )\n});\n\n    return (\n      <div > \n        <header className='header'>\n          <form className='form' onSubmit={handleClick}> \n            <input type=\"text\" className=\"search-bar\" name=\"search\" value={currentSearch} placeholder='Seach Movies' onChange={(e) => setCurrentSearch(e.target.value)}/>\n            <input type=\"submit\" value=\"\" placeholder='' className='submit-btn' />\n          </form> \n          <Button className='login' variant=\"outlined\" onClick={handleLoginNav}>   {!username ? \"Login\" : 'Hi,'+ ' ' + username} </Button>;\n          {username ? <Button className='logout' variant=\"outlined\" onClick={logout}> Logout </Button> : null}\n          </header>\n        <div className='backdrop'>\n          <MovieGrid movieDetails={movieDetails}/>\n        </div>\n      </div>\n    );\n  }\n\nexport default MainPage;\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}