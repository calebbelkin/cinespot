{"ast":null,"code":"var _jsxFileName = \"/Users/calebbelkin/Desktop/cinespot/src/components/MovieComponent.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport '../styling/MovieComponent.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setColor, enableColorChange, disableColorChange, setLastClickedId } from '../Redux/textSlice';\nimport MovieCard from './MovieCard';\nimport { setUsername, setFavorite } from '../Redux/userSlice';\nimport { current } from '@reduxjs/toolkit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Movie({\n  id,\n  title,\n  image,\n  rating,\n  releaseDate,\n  overview\n}) {\n  _s();\n  const [isHovering, setIsHovering] = useState(false);\n  const [isClicked, setIsClicked] = useState(false);\n  // const [loggedIn, setLoggedIn] = useState('')\n  // const [currentId, setCurrentId] = useState('')\n\n  const trueRating = Math.round(rating * 10) / 10;\n  const year = releaseDate.slice(0, 4);\n  const {\n    username,\n    favorite\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n\n  // setCurrentId(id)\n  const deleteFavMovie = async () => {\n    console.log('delete', isClicked);\n    setIsClicked(false);\n    try {\n      const response = await fetch(\"http://localhost:4321/user/deletefavorite\", {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: username,\n          movieId: currMovieData.id\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('favorite  deleted :', data);\n      } else {\n        console.error('fav movie delete failed:', data);\n      }\n    } catch (error) {\n      console.error(\"Error sending item:\", error);\n    }\n    ;\n  };\n  const currMovieData = {\n    id: id,\n    title: title,\n    image: image,\n    rating: rating,\n    releaseDate: releaseDate,\n    overview: overview\n  };\n  const favMovie = async () => {\n    console.log('add', isClicked);\n    setIsClicked(true);\n    try {\n      const response = await fetch(\"http://localhost:4321/user/addfavorite\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: username,\n          favorites: [currMovieData]\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('favcorite sucessfully sent :', data);\n      } else {\n        console.error('sendign fav failed:', data);\n      }\n    } catch (error) {\n      console.error(\"Error sending item:\", error);\n    }\n    ;\n  };\n\n  // const delOrFav = () => {\n  //   if (isClicked) favMovie()\n  //   else deleteFavMovie()\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"poster\",\n      src: `https://image.tmdb.org/t/p/w500${image}`,\n      alt: \"Poster\",\n      onError: err => console.log('img error', err.target),\n      onMouseEnter: () => setIsHovering(true),\n      onMouseLeave: () => setIsHovering(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"year-and-rating\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"year\",\n          children: year\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rating-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: trueRating\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this), username && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              if (!isClicked) {\n                favMovie();\n              } else {\n                deleteFavMovie();\n              }\n            },\n            style: {\n              backgroundColor: isClicked ? 'yellow' : 'white'\n            },\n            children: \"Favorite\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 35\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), isHovering && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-card\",\n      children: /*#__PURE__*/_jsxDEV(MovieCard, {\n        id: id,\n        title: title,\n        image: image,\n        rating: rating,\n        releaseDate: releaseDate,\n        overview: overview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(Movie, \"BIvZAtAWvIj3R69nHTopOuLqp3w=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Movie;\nexport default Movie;\nvar _c;\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","setColor","enableColorChange","disableColorChange","setLastClickedId","MovieCard","setUsername","setFavorite","current","jsxDEV","_jsxDEV","Movie","id","title","image","rating","releaseDate","overview","_s","isHovering","setIsHovering","isClicked","setIsClicked","trueRating","Math","round","year","slice","username","favorite","state","user","dispatch","deleteFavMovie","console","log","response","fetch","method","headers","body","JSON","stringify","movieId","currMovieData","data","json","ok","error","favMovie","favorites","className","children","src","alt","onError","err","target","onMouseEnter","onMouseLeave","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","backgroundColor","_c","$RefreshReg$"],"sources":["/Users/calebbelkin/Desktop/cinespot/src/components/MovieComponent.js"],"sourcesContent":["import React from 'react';\nimport { useState, useEffect } from 'react';\nimport '../styling/MovieComponent.css'\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setColor, enableColorChange, disableColorChange, setLastClickedId } from '../Redux/textSlice';\nimport MovieCard from './MovieCard';\nimport { setUsername, setFavorite} from '../Redux/userSlice';\nimport { current } from '@reduxjs/toolkit';\n\nfunction Movie ( { id, title, image, rating, releaseDate, overview} ) {\n  const [isHovering, setIsHovering] = useState(false)\n  const [isClicked, setIsClicked] = useState(false)\n  // const [loggedIn, setLoggedIn] = useState('')\n  // const [currentId, setCurrentId] = useState('')\n\n  const trueRating = Math.round(rating * 10) / 10\n  const year = releaseDate.slice(0, 4)\n  const { username, favorite } = useSelector((state) => state.user);\n  const dispatch = useDispatch();\n\n  // setCurrentId(id)\n  const deleteFavMovie = async () => {\n    console.log('delete', isClicked)\n    setIsClicked(false)\n    try {\n      const response = await fetch(\"http://localhost:4321/user/deletefavorite\", {\n        method: \"DELETE\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            username: username,\n            movieId: currMovieData.id\n        }),\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('favorite  deleted :', data);\n    } else {\n        console.error('fav movie delete failed:', data);\n    }\n\n    } catch (error) {\n      console.error(\"Error sending item:\", error);\n};\n  }\n\n  const currMovieData = {\n    id: id,\n    title: title,\n    image: image,\n    rating: rating,\n    releaseDate: releaseDate,\n    overview: overview\n};\n\n  const favMovie = async () => {\n\n    console.log('add', isClicked)\n\n    \n    setIsClicked(true)\n    try {\n      const response = await fetch(\"http://localhost:4321/user/addfavorite\", {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n            username: username,\n            favorites: [currMovieData]\n        }),\n      });\n      const data = await response.json();\n      if (response.ok) {\n        console.log('favcorite sucessfully sent :', data);\n    } else {\n        console.error('sendign fav failed:', data);\n    }\n    \n\n    } catch (error) {\n            console.error(\"Error sending item:\", error);\n  };\n}\n\n// const delOrFav = () => {\n//   if (isClicked) favMovie()\n//   else deleteFavMovie()\n// }\n\n  return (\n    <div className=\"movie-container\">\n        <img className=\"poster\"\n            src={`https://image.tmdb.org/t/p/w500${image}`}\n            alt=\"Poster\"\n            onError={(err) => console.log('img error', err.target)}\n            onMouseEnter={() => setIsHovering(true)}\n            onMouseLeave={() =>  setIsHovering(false)}\n        />\n        <div>\n            <div className=\"year-and-rating\">\n                <div className=\"year\">{year}</div>\n                <div className=\"rating-container\">\n                    <span>{trueRating}</span>\n                    {/* <img className=\"rating-star\" src={Star} alt=\"Star\" /> */}\n                   {username && ( <button onClick={() => {\n                if (!isClicked) {\n                  favMovie();\n                } else {\n                  deleteFavMovie();\n                }\n              }} style={{ backgroundColor : isClicked ? 'yellow' : 'white' } }>Favorite</button>)}\n                </div>\n            </div>\n            <div className=\"title\">{title}</div>\n        </div>\n        {isHovering && (\n            <div className=\"movie-card\">\n                <MovieCard\n                    id={id}\n                    title={title}\n                    image={image}\n                    rating={rating}\n                    releaseDate={releaseDate}\n                    overview={overview}\n                />\n            </div>\n        )}\n    </div>\n);\n}\n\nexport default Movie;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}